# This file was auto-generated by the Firebase CLI
# https://github.com/firebase/firebase-tools

name: Deploy to Firebase Hosting on merge
on:
  push:
    branches:
      - main
jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - uses: pnpm/action-setup@v2
        with:
          version: 10.9.0
          run_install: false
      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
      - uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Install dependencies
        run: pnpm install
        
      # Firebase環境変数のセットアップ
      - name: Verify Firebase environment variables
        env:
          FIREBASE_API_KEY: ${{ vars.FIREBASE_API_KEY }}
          FIREBASE_AUTH_DOMAIN: ${{ vars.FIREBASE_AUTH_DOMAIN }}
          FIREBASE_PROJECT_ID: ${{ vars.FIREBASE_PROJECT_ID }}
          FIREBASE_STORAGE_BUCKET: ${{ vars.FIREBASE_STORAGE_BUCKET }}
          FIREBASE_MESSAGING_SENDER_ID: ${{ vars.FIREBASE_MESSAGING_SENDER_ID }}
          FIREBASE_APP_ID: ${{ vars.FIREBASE_APP_ID }}
        run: |
          if [ -z "$FIREBASE_API_KEY" ] || \
             [ -z "$FIREBASE_AUTH_DOMAIN" ] || \
             [ -z "$FIREBASE_PROJECT_ID" ] || \
             [ -z "$FIREBASE_STORAGE_BUCKET" ] || \
             [ -z "$FIREBASE_MESSAGING_SENDER_ID" ] || \
             [ -z "$FIREBASE_APP_ID" ]; then
            echo "ERROR: Required Firebase environment variables are not set!"
            echo "Please set all required Firebase environment variables in GitHub repository variables."
            exit 1
          fi
          
          # 確認のために変数の状態を出力
          echo "Firebase API Key: （安全のため非表示）"
          echo "Firebase Auth Domain: $FIREBASE_AUTH_DOMAIN"
          echo "Firebase Project ID: $FIREBASE_PROJECT_ID"
          echo "Firebase variables set: $([[ -n "$FIREBASE_API_KEY" && -n "$FIREBASE_AUTH_DOMAIN" && -n "$FIREBASE_PROJECT_ID" ]] && echo "YES" || echo "NO")"
          
      - name: Create Firebase Environment
        env:
          FIREBASE_API_KEY: ${{ vars.FIREBASE_API_KEY }}
          FIREBASE_AUTH_DOMAIN: ${{ vars.FIREBASE_AUTH_DOMAIN }}
          FIREBASE_PROJECT_ID: ${{ vars.FIREBASE_PROJECT_ID }}
          FIREBASE_STORAGE_BUCKET: ${{ vars.FIREBASE_STORAGE_BUCKET }}
          FIREBASE_MESSAGING_SENDER_ID: ${{ vars.FIREBASE_MESSAGING_SENDER_ID }}
          FIREBASE_APP_ID: ${{ vars.FIREBASE_APP_ID }}
        run: |
          mkdir -p apps/web
          echo "VITE_FIREBASE_API_KEY=$FIREBASE_API_KEY" >> apps/web/.env
          echo "VITE_FIREBASE_AUTH_DOMAIN=$FIREBASE_AUTH_DOMAIN" >> apps/web/.env
          echo "VITE_FIREBASE_PROJECT_ID=$FIREBASE_PROJECT_ID" >> apps/web/.env
          echo "VITE_FIREBASE_STORAGE_BUCKET=$FIREBASE_STORAGE_BUCKET" >> apps/web/.env
          echo "VITE_FIREBASE_MESSAGING_SENDER_ID=$FIREBASE_MESSAGING_SENDER_ID" >> apps/web/.env
          echo "VITE_FIREBASE_APP_ID=$FIREBASE_APP_ID" >> apps/web/.env
      
      - name: Build
        run: pnpm build
      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_AILIAXUI }}
          channelId: live
          projectId: ailiaxui
          target: web-shell
